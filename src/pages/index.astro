---
import BaseHead from "../components/BaseHead.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import Contact from "../components/Contact.astro";
import ToolMarquee from "../components/ToolMarquee.astro";
import PageLoader from "../components/PageLoader.astro";
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <script>
      import { shuffle } from "lodash";
      import { spring, timeline, type TimelineSegment } from "motion";

      addEventListener("load", () => {
        timeline([
          ["#page-loader", { opacity: 0 }, { duration: 1, delay: 0.5 }],
          ["#page-loader", { display: "none" }],
          ["#title", { opacity: [0, 1] }, { duration: 0.75, at: "-.5" }],
          ["#about", { opacity: [0, 1] }, { duration: 0.75, at: "-.5" }],
          [
            "#worldmap",
            { opacity: [0, 1] },
            { duration: 0.75, at: "-.5", easing: "linear" },
          ],
          [
            "#experience-title",
            { opacity: [0, 1] },
            { duration: 0.75, at: "-.5" },
          ],
          ...shuffle(document.querySelectorAll(".tool-chip")).map(
            (element, index) =>
              [
                element,
                { opacity: [0, 1], scale: [0.75, 1] },
                {
                  duration: 0.5,
                  at: index ? "<" : "-1",
                  delay: index * 0.05,
                },
              ] as TimelineSegment
          ),
          ["#contact-container", { x: ["0%", "-50%"] }, { at: "-1" }],
          [
            "#contact-container",
            { y: [300, 0] },
            { easing: spring(), at: "<" },
          ],
        ]);

        const WAVE_TIMES = [20000, 35000, 10000, 15000, 40000];

        const wave = () => {
          // If the animation is already running, don't start it again
          if (!window.waveTimeoutRef) {
            // Start the animation
            document.getElementById("wave-emoji")?.classList.add("wave");

            // Clear the animation class after 2 seconds
            window.waveTimeoutRef = setTimeout(() => {
              document.getElementById("wave-emoji")?.classList.remove("wave");
              window.waveTimeoutRef = null;
            }, 2000);
          }

          const nextWave = shuffle(WAVE_TIMES)[0];

          setTimeout(wave, nextWave);
        };

        setTimeout(() => {
          wave();
        }, 3000);
      });
    </script>
  </head>
  <body
    class="bg-brand-sand-light md:bg-gradient-to-br md:from-brand-orange-light md:to-brand-sand-dark"
  >
    <PageLoader />
    <div class="flex md:h-auto md:min-h-screen overflow-clip xl:p-12 2xl:p-56">
      <div
        id="content"
        class="flex w-full md:w-[650px] p-8 md:p-16 pb-36 md:pb-16 z-50 shadow-xl bg-brand-sand-light rounded-none md:rounded-2xl overflow-clip"
      >
        <div class="flex flex-col justify-between gap-16 w-full">
          <div class="flex flex-col gap-4 md:gap-8">
            <h1 id="title" class="text-3xl md:text-5xl font-light md:mb-6">
              Juan Abbona
            </h1>

            <p id="about" class="text-sm md:text-base">
              I’m Juan, a software engineer with a passion for design based in
              Montevideo, Uruguay.
              <br />
              <br />
              I’ve been building beautiful web applications that scale for over seven
              years. My main focus is on frontend web development using React and
              TypeScript although I also have plenty of experience on backend development
              using Python and Django.
            </p>
            <div
              id="worldmap"
              class="relative w-[522px] h-[342px] mt-[-230px] md:mt-[-230px] md:ml-[200px] -mb-3 md:-mb-6 -z-10"
            >
              <div
                class="absolute top-0 right-0 bottom-0 left-0 bg-gradient-to-br from-brand-sand-light from-30% via-50% via-transparent"
              >
              </div>
              <img src="/worldmap.svg" alt="Uruguay in the world map" />
            </div>
            <h3 id="experience-title" class="text-sm md:text-base">
              I’m experienced working with
            </h3>
            <ToolMarquee />
          </div>
          <div
            id="contact-container"
            class="fixed md:relative left-[50%] translate-x-[-50%] bottom-8 px-8 py-4 md:p-0 rounded-full shadow-xl md:shadow-none bg-gradient-to-br to-brand-orange-light from-brand-sand-dark md:bg-none"
          >
            <Contact />
          </div>
        </div>
      </div>
    </div>
  </body>
</html>
